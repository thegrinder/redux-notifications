{"version":3,"sources":["/home/travis/build/thegrinder/rr-notifications/src/helpers/utils.js","/home/travis/build/thegrinder/rr-notifications/src/components/Container/Container.js","/home/travis/build/thegrinder/rr-notifications/src/animations/animations.js","/home/travis/build/thegrinder/rr-notifications/src/components/Notification/Notification.js","/home/travis/build/thegrinder/rr-notifications/src/components/NotificationContainer/NotificationContainer.js","/home/travis/build/thegrinder/rr-notifications/src/components/NotificationsProvider/NotificationsProvider.js","/home/travis/build/thegrinder/rr-notifications/src/hooks/useNotification/useNotification.js","/home/travis/build/thegrinder/rr-notifications/src/index.mdx"],"names":["COORDINATES","convertToCssPosition","position","map","value","index","concat","convertToCssDuration","miliseconds","toString","getFlexDirection","indexOf","getAnimatedMargin","propTypes","PropTypes","array","isRequired","Container","styled","div","_templateObject","props","verticalShow","height","animatedMargin","keyframes","animations_templateObject","verticalHide","_templateObject2","horizontalShow","slideFromSide","_templateObject3","horizontalHide","_templateObject4","isVisible","bool","notificationHeight","number","animationDuration","animationEasing","string","Notification","Notification_templateObject","_ref","NotificationContainer","children","notificationRef","useRef","_useState","useState","_useState2","Object","slicedToArray","updateHeight","useLayoutEffect","current","clientHeight","react_default","a","createElement","Notification_Notification","ref","NotificationsContext","createContext","NotificationsProvider","renderNotification","dismissAfter","automaticDismissalTimers","manualDismissalTimers","notifications","updateNotifications","removeNotification","useCallback","id","clearTimeout","state","objectSpread","defineProperty","hideNotification","setTimeout","keys","filter","notificationId","reduce","acc","unmountNotification","showNotification","payload","arguments","length","undefined","Date","now","clearAllTimeouts","toConsumableArray","values","forEach","timeout","useEffect","useMemo","Provider","Container_Container","_ref2","components_NotificationContainer_NotificationContainer","key","defaultProps","useNotification","useContext","makeShortcode","name","console","warn","index_es","layoutProps","MDXLayout","MDXContent","components","objectWithoutProperties","esm_extends","mdxType","parentName","href","alt","src","className","index_esm","__position","__code","__scope","this","Playground","Demo","onClick","text","style","backgroundColor","padding","marginBottom","color","type","isMDXComponent"],"mappings":"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","file":"static/js/src-index.52c6ede0.js","sourcesContent":["const COORDINATES = ['top', 'right', 'bottom', 'left'];\n\nexport const convertToCssPosition = position => position.map((value, index) => (\n  `${COORDINATES[index]}: ${value};`\n));\n\nexport const convertToCssDuration = miliseconds => `${(miliseconds / 1000).toString()}s`;\n\nexport const getFlexDirection = position => (\n  position[COORDINATES.indexOf('top')] !== 'auto'\n    ? 'column'\n    : 'column-reverse'\n);\n\nexport const getAnimatedMargin = position => (\n  position[COORDINATES.indexOf('top')] !== 'auto'\n    ? 'top'\n    : 'bottom'\n);\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { convertToCssPosition, getFlexDirection } from '../../helpers/utils';\n\nconst propTypes = {\n  position: PropTypes.array.isRequired,\n};\n\nconst Container = styled.div`\n  position: fixed;\n  display: flex;\n  z-index: 999999;\n  height: 0;\n  flex-direction: ${props => getFlexDirection(props.position)};\n  ${props => convertToCssPosition(props.position)}\n`;\n\nContainer.propTypes = propTypes;\n\nexport default Container;\n","import { keyframes } from 'styled-components';\n\nconst TRANSLATEX = 60;\n\nexport const verticalShow = (height, animatedMargin) => (\n  keyframes`\n    0% {\n      margin-${animatedMargin}: ${-height}px;\n      opacity: 0;\n    }\n    100% {\n      margin-${animatedMargin}: 0px;\n      opacity: 1;\n    }\n  `\n);\n\nexport const verticalHide = (height, animatedMargin) => (\n  keyframes`\n    0% {\n      margin-${animatedMargin}: 0px;\n      opacity: 1;\n    }\n    100% {\n      margin-${animatedMargin}: ${-height}px;\n      opacity: 0;\n    }\n  `\n);\n\nexport const horizontalShow = (height, animatedMargin, slideFromSide) => (\n  keyframes`\n    0% {\n      margin-${animatedMargin}: ${-height}px;\n      opacity: 0;\n      transform: translateX(${slideFromSide === 'left' ? -TRANSLATEX : TRANSLATEX}%);\n    }\n    50% {\n      margin-${animatedMargin}: 0;\n      opacity: 0;\n      transform: translateX(${slideFromSide === 'left' ? -TRANSLATEX : TRANSLATEX}%);\n    }\n    100% {\n      margin-${animatedMargin}: 0;\n      opacity: 1;\n      transform: translateX(0%);\n    }\n  `\n);\n\nexport const horizontalHide = (height, animatedMargin, slideFromSide) => (\n  keyframes`\n    0%{\n      margin-${animatedMargin}: 0;\n      opacity: 1;\n      transform: translateX(0%);\n    }\n    50% {\n      margin-${animatedMargin}: 0;\n      opacity: 0;\n      transform: translateX(${slideFromSide === 'left' ? -TRANSLATEX : TRANSLATEX}%);\n    }\n    100% {\n      margin-${animatedMargin}: ${-height}px;\n      opacity: 0;\n      transform: translateX(${slideFromSide === 'left' ? -TRANSLATEX : TRANSLATEX}%);\n    }\n  `\n);\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { convertToCssDuration, getAnimatedMargin } from '../../helpers/utils';\nimport {\n  horizontalShow,\n  horizontalHide,\n  verticalShow,\n  verticalHide,\n} from '../../animations/animations';\n\nconst propTypes = {\n  isVisible: PropTypes.bool.isRequired,\n  notificationHeight: PropTypes.number.isRequired,\n  position: PropTypes.array.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n  animationEasing: PropTypes.string.isRequired,\n  slideFromSide: PropTypes.string.isRequired,\n};\n\nconst Notification = styled.div`\n  position: relative;\n  z-index: ${props => (props.isVisible ? 999999 : -1)};\n  animation: ${({ isVisible, position, slideFromSide, notificationHeight }) => {\n    const animatedMargin = getAnimatedMargin(position);\n    if (slideFromSide) {\n      return isVisible\n        ? horizontalShow(notificationHeight, animatedMargin, slideFromSide)\n        : horizontalHide(notificationHeight, animatedMargin, slideFromSide);\n    }\n    return isVisible\n      ? verticalShow(notificationHeight, animatedMargin)\n      : verticalHide(notificationHeight, animatedMargin);\n  }};\n  animation-timing-function: ${props => props.animationEasing};\n  animation-duration: ${props => convertToCssDuration(props.animationDuration)};\n  animation-fill-mode: forwards;\n`;\n\nNotification.propTypes = propTypes;\n\nexport default Notification;\n","import React, {\n  useLayoutEffect,\n  useRef,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from '../Notification/Notification';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n  position: PropTypes.array.isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n  animationEasing: PropTypes.string.isRequired,\n  slideFromSide: PropTypes.string.isRequired,\n};\n\nconst NotificationContainer = ({\n  children,\n  position,\n  isVisible,\n  animationDuration,\n  animationEasing,\n  slideFromSide,\n}) => {\n  const notificationRef = useRef(null);\n  const [height, updateHeight] = useState(0);\n\n  useLayoutEffect(() => {\n    if (notificationRef.current) {\n      updateHeight(notificationRef.current.clientHeight);\n    }\n  }, [notificationRef]);\n\n  return (\n    <Notification\n      ref={notificationRef}\n      position={position}\n      notificationHeight={height}\n      isVisible={isVisible}\n      slideFromSide={slideFromSide}\n      animationEasing={animationEasing}\n      animationDuration={animationDuration}\n    >\n      {children}\n    </Notification>\n  );\n};\n\nNotificationContainer.propTypes = propTypes;\n\nexport default NotificationContainer;\n","import React, {\n  createContext,\n  useCallback,\n  useState,\n  useRef,\n  useEffect,\n  useMemo,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '../Container/Container';\nimport NotificationContainer from '../NotificationContainer/NotificationContainer';\n\nexport const NotificationsContext = createContext({});\n\nconst propTypes = {\n  /** Children */\n  children: PropTypes.node.isRequired,\n  /** Render prop which passes down removeNotification function and notification payload */\n  renderNotification: PropTypes.func.isRequired,\n  /** Fixed position where all notifications are displayed */\n  position: PropTypes.array,\n  /** Duration of the show and hide animations in miliseconds */\n  animationDuration: PropTypes.number,\n  /** Animation timing function / cubic-bezier */\n  animationEasing: PropTypes.string,\n  /** Time in miliseconds after which the notification is automatically dismissed */\n  dismissAfter: PropTypes.number,\n  /**\n   * Horizontal direction which notification appears from. If not provided,\n   * the notification will appear from top or bottom, depending on position prop\n   * */\n  slideFromSide: PropTypes.string,\n};\n\nconst defaultProps = {\n  position: ['40px', '40px', 'auto', 'auto'],\n  animationDuration: 400,\n  animationEasing: 'ease',\n  dismissAfter: 6000,\n  slideFromSide: '',\n};\n\nconst NotificationsProvider = ({\n  children,\n  renderNotification,\n  position,\n  animationDuration,\n  animationEasing,\n  slideFromSide,\n  dismissAfter,\n}) => {\n  const automaticDismissalTimers = useRef({});\n  const manualDismissalTimers = useRef({});\n\n  const [notifications, updateNotifications] = useState({});\n\n  const hideNotification = id => updateNotifications(state => ({\n    ...state,\n    [id]: {\n      ...state[id],\n      isVisible: false,\n    },\n  }));\n\n  const unmountNotification = id => updateNotifications(state => (\n    Object.keys(state)\n      .filter(notificationId => notificationId !== id)\n      .reduce((acc, notificationId) => ({\n        ...acc,\n        [notificationId]: state[notificationId],\n      }), {})\n  ));\n\n  const removeNotification = useCallback(id => () => {\n    clearTimeout(automaticDismissalTimers.current[id]);\n    hideNotification(id);\n    manualDismissalTimers.current[id] = setTimeout(() => {\n      unmountNotification(id);\n    }, animationDuration);\n  }, [animationDuration]);\n\n  const showNotification = useCallback((payload = {}) => updateNotifications((state) => {\n    const id = Date.now().toString();\n    automaticDismissalTimers.current[id] = setTimeout(() => {\n      removeNotification(id)();\n    }, dismissAfter);\n    return {\n      ...state,\n      [id]: {\n        id,\n        isVisible: true,\n        payload,\n      },\n    };\n  }), [dismissAfter, removeNotification]);\n\n  const clearAllTimeouts = () => {\n    [\n      ...Object.values(manualDismissalTimers.current),\n      ...Object.values(automaticDismissalTimers.current),\n    ]\n      .forEach(timeout => clearTimeout(timeout));\n  };\n\n  useEffect(() => clearAllTimeouts, []);\n\n  const value = useMemo(() => ({\n    showNotification,\n    removeNotification,\n  }), [removeNotification, showNotification]);\n\n  return (\n    <NotificationsContext.Provider value={value}>\n      <Container position={position}>\n        {Object.values(notifications).map(({ id, payload, isVisible }) => (\n          <NotificationContainer\n            key={id}\n            position={position}\n            animationDuration={animationDuration}\n            animationEasing={animationEasing}\n            slideFromSide={slideFromSide}\n            dismissAfter={dismissAfter}\n            isVisible={isVisible}\n          >\n            {renderNotification({\n              removeNotification: removeNotification(id),\n              payload,\n            })}\n          </NotificationContainer>\n        ))}\n      </Container>\n      {children}\n    </NotificationsContext.Provider>\n  );\n};\n\nNotificationsProvider.propTypes = propTypes;\nNotificationsProvider.defaultProps = defaultProps;\n\nexport default NotificationsProvider;\n","import { useContext } from 'react';\nimport { NotificationsContext } from '../../components/NotificationsProvider/NotificationsProvider';\n\nconst useNotification = () => useContext(NotificationsContext);\n\nexport default useNotification;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from 'docz';\nimport { NotificationsProvider, useNotification } from './'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Demo = makeShortcode(\"Demo\");\nconst App = makeShortcode(\"App\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"rr-notifications\"\n    }}>{`rr-notifications`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://opensource.org/licenses/MIT\"\n      }}><img alt=\"License: MIT\" src=\"https://img.shields.io/badge/License-MIT-yellow.svg\" /></a>{` `}{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/rr-notifications\"\n      }}><img alt=\"version\" src=\"https://img.shields.io/npm/v/rr-notifications.svg?style=flat\" /></a>{` `}{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://travis-ci.org/thegrinder/rr-notifications\"\n      }}><img alt=\"Build Status\" src=\"https://travis-ci.org/thegrinder/rr-notifications.svg?branch=master\" /></a>{` `}{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/semantic-release/semantic-release\"\n      }}><img alt=\"semantic-release\" src=\"https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg\" /></a>{` `}{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://codecov.io/gh/thegrinder/rr-notifications\"\n      }}><img alt=\"Codecov\" src=\"https://img.shields.io/codecov/c/github/thegrinder/rr-notifications.svg\" /></a>{` `}{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/styled-components/styled-components\"\n      }}><img alt=\"style: styled-components\" src=\"https://img.shields.io/badge/style-%F0%9F%92%85%20styled--components-orange.svg?colorB=daa357&colorA=db748e\" /></a>{` `}</p>\n    <p>{`rr-notifications is a flexible and customizable react notification system. Create your own notification component with the content you want,\nstyle it however you want and with technology of your choice and it will work.`}</p>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React from 'react';\nimport { useNotification } from 'rr-notifications';\n\nconst Demo = () => {\n  const { showNotification } = useNotification();\n  return (\n    <div>\n      <button onClick={() => showNotification({ text: 'notification' })}>\n        Add notification\n      </button>\n    </div>\n  );\n};\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { NotificationsProvider } from 'rr-notifications';\nimport Demo from 'path/to/demo';\n\nconst App = () => (\n  <NotificationsProvider\n    position={[ '80px', '80px', 'auto', 'auto']}\n    animationDuration={400}\n    animationEasing=\"ease\"\n    slideFromSide=\"right\"\n    renderNotification={({ removeNotification, payload }) => (\n      <div style={{\n        backgroundColor: '#333',\n        padding: '16px',\n        marginBottom: '8px',\n      }}>\n        <p style={{ color: '#fff' }}>\n          {payload.text}\n        </p>\n        <button type=\"button\" onClick={removeNotification}>\n          Click to close\n        </button>\n      </div>\n    )}\n  >\n    <Demo />\n  </NotificationsProvider>\n);\n`}</code></pre>\n    <Playground __position={0} __code={'() => {\\n  const Demo = () => {\\n    const { showNotification } = useNotification()\\n    return (\\n      <div>\\n        <button onClick={() => showNotification({ text: \\'notification\\' })}>\\n          Add notification\\n        </button>\\n      </div>\\n    )\\n  }\\n  const App = () => (\\n    <NotificationsProvider\\n      position={[\\'80px\\', \\'80px\\', \\'auto\\', \\'auto\\']}\\n      animationDuration={400}\\n      animationEasing=\\\"ease\\\"\\n      slideFromSide=\\\"right\\\"\\n      renderNotification={({ removeNotification, payload }) => (\\n        <div\\n          style={{\\n            backgroundColor: \\'#333\\',\\n            padding: \\'16px\\',\\n            marginBottom: \\'8px\\',\\n          }}\\n        >\\n          <p style={{ color: \\'#fff\\' }}>{payload.text}</p>\\n          <button type=\\\"button\\\" onClick={removeNotification}>\\n            Click to close\\n          </button>\\n        </div>\\n      )}\\n    >\\n      <Demo />\\n    </NotificationsProvider>\\n  )\\n\\n  return <App />\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      NotificationsProvider,\n      useNotification\n    }} mdxType=\"Playground\">\n  {() => {\n        const Demo = () => {\n          const {\n            showNotification\n          } = useNotification();\n          return <div>\n          <button onClick={() => showNotification({\n              text: 'notification'\n            })}>\n            Add notification\n          </button>\n        </div>;\n        };\n\n        const App = () => <NotificationsProvider position={['80px', '80px', 'auto', 'auto']} animationDuration={400} animationEasing=\"ease\" slideFromSide=\"right\" renderNotification={({\n          removeNotification,\n          payload\n        }) => <div style={{\n          backgroundColor: '#333',\n          padding: '16px',\n          marginBottom: '8px'\n        }}>\n        <p style={{\n            color: '#fff'\n          }}>\n          {payload.text}\n        </p>\n        <button type=\"button\" onClick={removeNotification}>\n          Click to close\n        </button>\n      </div>} mdxType=\"NotificationsProvider\">\n    <Demo mdxType=\"Demo\" />\n  </NotificationsProvider>;\n\n        return <App mdxType=\"App\" />;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}
{"version":3,"sources":["webpack:///../src/components/NotificationsProvider/NotificationsProvider.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","NotificationsProvider","isMDXComponent"],"mappings":"iRAQaA,G,UAAe,S,gPAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,yBADR,yBAGA,8PAGA,YAAC,IAAD,CAAOC,GAAIC,IAAuBF,QAAQ,gB,8OAK9CH,EAAWM,gBAAiB","file":"component---src-components-notifications-provider-notifications-provider-mdx-85285eea9442126ae7c9.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/thegrinder/rr-notifications/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Props } from 'docz';\nimport NotificationsProvider from './NotificationsProvider';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"notificationsprovider\"\n    }}>{`NotificationsProvider`}</h1>\n    <p>{`NotificationsProvider component is just a context provider that takes a few configuration props.\nThe most important is renderNotification that allows for maximum flexibility when creating your\nown custom notification component.`}</p>\n    <Props of={NotificationsProvider} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}